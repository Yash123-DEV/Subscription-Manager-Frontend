{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LegacyEventEmitter = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _NativeEventEmitter = _interopRequireDefault(require(\"react-native-web/dist/exports/NativeEventEmitter\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nvar LegacyEventEmitter = exports.LegacyEventEmitter = function () {\n  function LegacyEventEmitter(nativeModule) {\n    (0, _classCallCheck2.default)(this, LegacyEventEmitter);\n    this._listenerCount = 0;\n    this._nativeModule = void 0;\n    this._eventEmitter = void 0;\n    if (nativeModule.__expo_module_name__) {\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new _NativeEventEmitter.default(nativeModule);\n  }\n  return (0, _createClass2.default)(LegacyEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      var _this = this;\n      if (!this._listenerCount && _Platform.default.OS !== 'ios' && this._nativeModule.startObserving) {\n        this._nativeModule.startObserving();\n      }\n      this._listenerCount++;\n      var nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n      var subscription = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, nativeEmitterSubscriptionKey, nativeEmitterSubscription), \"remove\", function remove() {\n        _this.removeSubscription(subscription);\n      });\n      return subscription;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      var removedListenerCount = this._eventEmitter.listenerCount ? this._eventEmitter.listenerCount(eventName) : this._eventEmitter.listeners(eventName).length;\n      this._eventEmitter.removeAllListeners(eventName);\n      this._listenerCount -= removedListenerCount;\n      (0, _invariant.default)(this._listenerCount >= 0, `EventEmitter must have a non-negative number of listeners`);\n      if (!this._listenerCount && _Platform.default.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      var nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n      if (!nativeEmitterSubscription) {\n        return;\n      }\n      if ('remove' in nativeEmitterSubscription) {\n        nativeEmitterSubscription.remove();\n      }\n      this._listenerCount--;\n      delete subscription[nativeEmitterSubscriptionKey];\n      subscription.remove = function () {};\n      if (!this._listenerCount && _Platform.default.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this$_eventEmitter;\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n      (_this$_eventEmitter = this._eventEmitter).emit.apply(_this$_eventEmitter, [eventName].concat(params));\n    }\n  }]);\n}();","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","_NativeEventEmitter","_Platform","nativeEmitterSubscriptionKey","LegacyEventEmitter","exports","nativeModule","_classCallCheck2","default","_listenerCount","_nativeModule","_eventEmitter","__expo_module_name__","NativeEventEmitter","_createClass2","key","value","addListener","eventName","listener","_this","Platform","OS","startObserving","nativeEmitterSubscription","subscription","_defineProperty2","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","invariant","stopObserving","emit","_this$_eventEmitter","_len","arguments","params","Array","_key","apply","concat"],"sources":["C:/Users/Shubh/OneDrive/Desktop/Subscription-Manager-frontend/Subscription-Manager-Frontend/node_modules/expo-modules-core/src/LegacyEventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nimport { EventSubscription } from './EventEmitter';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n\n  // Erase these types as they would conflict with the new NativeModule type.\n  // This EventEmitter is deprecated anyway.\n  addListener?: any;\n  removeListeners?: any;\n};\n\n/**\n * @deprecated Deprecated in favor of `EventEmitter`.\n */\nexport class LegacyEventEmitter {\n  _listenerCount = 0;\n\n  // @ts-expect-error\n  _nativeModule: NativeModule;\n\n  // @ts-expect-error\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // If the native module is a new module, just return it back as it's already an event emitter.\n    // This is for backwards compatibility until we stop using this legacy class in other packages.\n    if (nativeModule.__expo_module_name__) {\n      // @ts-expect-error\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): EventSubscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: EventSubscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      nativeEmitterSubscription.remove();\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}